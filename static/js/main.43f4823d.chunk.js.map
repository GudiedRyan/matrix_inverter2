{"version":3,"sources":["Matrix.js","App.js","serviceWorker.js","index.js"],"names":["ThreeByThree","props","handleChange","event","setState","target","name","value","calculateDet","state","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","det","className","onChange","this","placeholder","React","Component","App","invert","a","d","b","c","showDet","allowInvert","e","f","g","h","reset","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.43f4823d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ThreeByThree extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            a11: \"\",\r\n            a12: \"\",\r\n            a13: \"\",\r\n            a21: \"\",\r\n            a22: \"\",\r\n            a23: \"\",\r\n            a31: \"\",\r\n            a32: \"\",\r\n            a33: \"\",\r\n            b11: \"\",\r\n            b12: \"\",\r\n            b13: \"\",\r\n            b21: \"\",\r\n            b22: \"\",\r\n            b23: \"\",\r\n            b31: \"\",\r\n            b32: \"\",\r\n            b33: \"\",\r\n            det: \"\"\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h5>3x3 Matrix Inverter</h5>\r\n                <div className=\"vector\">\r\n                <table className=\"matrix\">\r\n                  <tr>\r\n                    <td><input onChange={this.handleChange} name=\"a11\" placeholder=\"a11\" value={this.state.a11}></input></td>\r\n                    <td><input onChange={this.handleChange} name=\"a12\" placeholder=\"a12\" value={this.state.a12}></input></td>\r\n                    <td><input onChange={this.handleChange} name=\"a13\" placeholder=\"a13\" value={this.state.a13}></input></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><input onChange={this.handleChange} name=\"a21\" placeholder=\"a21\" value={this.state.a21}></input></td>\r\n                    <td><input onChange={this.handleChange} name=\"a22\" placeholder=\"a22\" value={this.state.a22}></input></td>\r\n                    <td><input onChange={this.handleChange} name=\"a23\" placeholder=\"a23\" value={this.state.a23}></input></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td><input onChange={this.handleChange} name=\"a31\" placeholder=\"a31\" value={this.state.a31}></input></td>\r\n                    <td><input onChange={this.handleChange} name=\"a32\" placeholder=\"a32\" value={this.state.a32}></input></td>\r\n                    <td><input onChange={this.handleChange} name=\"a33\" placeholder=\"a33\" value={this.state.a33}></input></td>\r\n                  </tr>\r\n                </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });\r\n      }\r\n    calculateDet = () => {\r\n        this.setState(state => ({\r\n\r\n        }))\r\n    }\r\n}\r\n\r\nexport default ThreeByThree;","import React from 'react';\r\nimport './App.css';\r\nimport ThreeByThree from \"./Matrix\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      a: \"\",\r\n      b: \"\",\r\n      c: \"\",\r\n      d: \"\",\r\n      det: \"\",\r\n      e:\"\",\r\n      f:\"\",\r\n      g:\"\",\r\n      h:\"\",\r\n      allowInvert: false,\r\n      showDet: false\r\n    }\r\n  }\r\n  render() {\r\n    return(\r\n      <div className=\"body\">\r\n        <h4>Matrix Inverter</h4>\r\n        <div className=\"vector\">\r\n        <table className=\"matrix\">\r\n              <tr>\r\n                <td><input onChange={this.handleChange} name=\"a\" placeholder=\"a\" value={this.state.a}></input></td>\r\n                <td><input onChange={this.handleChange} name=\"b\" placeholder=\"b\" value={this.state.b}></input></td>\r\n              </tr>\r\n              <tr>\r\n                <td><input onChange={this.handleChange} name=\"c\" placeholder=\"c\" value={this.state.c}></input></td>\r\n                <td><input onChange={this.handleChange} name=\"d\" placeholder=\"d\" value={this.state.d}></input></td>\r\n              </tr>\r\n            </table>\r\n            </div>\r\n            <br />\r\n          <button onClick={this.invert}>Invert</button>\r\n          <button onClick={this.reset}>Reset</button>\r\n          <hr />\r\n          <div>\r\n            {this.state.showDet? <p>det = {this.state.det}</p> : <p></p>}\r\n            <br />\r\n            {this.state.allowInvert? \r\n            <div className=\"vector\">\r\n              <table className=\"matrix\">\r\n                <tr>\r\n                  <td>{this.state.h}</td>\r\n                  <td>{this.state.f}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{this.state.g}</td>\r\n                  <td>{this.state.e}</td>\r\n                </tr>\r\n              </table>\r\n            </div> : <p>If determinant is equal to 0, the matrix is not invertible.</p>}\r\n          </div>\r\n          <hr />\r\n              <ThreeByThree />\r\n      </div>\r\n    )\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n  invert = () => {\r\n    this.setState(state => ({\r\n      det: state.a * state.d - state.b * state.c,\r\n      showDet: true\r\n    }));\r\n    if (this.state.det === 0) {\r\n      this.setState({\r\n        allowInvert: false\r\n      })\r\n    } else {\r\n      this.setState(state => ({\r\n        allowInvert: true,\r\n        e: state.a/state.det,\r\n        f: state.b/state.det*-1,\r\n        g: state.c/state.det*-1,\r\n        h: state.d/state.det,\r\n      }))\r\n    }\r\n  }\r\n  reset = () => {\r\n    this.setState(state => ({\r\n      a:\"\",\r\n      b:\"\",\r\n      c:\"\",\r\n      d:\"\",\r\n      det:\"\",\r\n      showDet:\"\",\r\n      allowInvert: false\r\n    }))\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}